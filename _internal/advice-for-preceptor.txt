
## Class Preparation

* Identify one or more head TFs, and also some Senior TFs.

* Seek TF volunteers.

* Set up new Google form.

* New Github organization: bootcamp-yyyy-mm

* Check the old bootcamp server. Just use it again.

* Sign up for Zoom which has enough slots of students. Can wait until enrollment firms up.

## Enrollment

* Start registration process three weeks before course starts. After a week, let people know that registration ends in a week, a week before class starts. Close registration a week ahead. Of course, you can let in, by hand, some extra students, but the sooner you nail down the students, the better.

* Require submission of the "Tutorials with Positron" tutorial in order to "register" for the class. This guarantees that you will have a spot, but you still need to do all the work. 

* Inform about the survey and the homework for class 1 at the same time you close registration, which is the Monday before.

* On Wednesday, email them a link to the class survey which includes, full name, email (to use for assignments), age, birth country, city/country from where you will take the course, programming experience (either zero or some). Tell them they have 24 hours to complete the (trivial!) survey, or you reserve the right to remove them from the class. The big advantage of this is that the vast majority will do the survey, allowing the head TF to get going on the 

* Require submission of the "Introduction" and "01-code" tutorial in order to get a Zoom link for the first class. Require this be submitted by Sunday at midnight.

* 

* Spend Monday getting the class list organized. Need to put students into 
breakout rooms and assign rooms to TFs. Details will depend on # of students 
and of TFs. 



* Solicit email from "special" students who should be grouped together. 
Two common examples are younger ones (<=14) and older ones (>22). Put these 
together in separate groups.

* Create a new location for example reprexes at Posit Community for the Getting 
Help tutorial. Here is the most recent one: 
https://forum.posit.co/t/thread-for-students-posting-practice-reprexes-please-do-not-answer-them/196503

* Update Getting Help tutorial links.

* Set up class list and cold_call function.

* Set up empty project for first class so your set up looks like student set up.

* Setup Excel spreadsheet for Data and Model Projects.

This document provides an overview of the course --- its structure, schedule and
philosophy. 

## Empower the TFs

The more power and responsibility the TFs have, the better. But then we are required to build tools which empower them. Examples:

1) Given a list of their students' emails, it should be easy for TFs to determine which of their students have submitted which of the homework assignments. Pass in one student email and you get a list of their completed assignments.

2) Given a specific tutorial, a list of their students' emails and a list of code chunk names, it should be easy for TFs to get a list of all the students and their answers to all the specified questions in a given tutorial.

3) Would be super cool if TFs could press a button, and then get a browser, with a tab showing the url for each of their student's URL submissions in a given homework. We need to make it easier for TFs to check student work.



## Next Time

* Switch days 5 and 6. Need to explore the Census data first, perhaps making 
a boxplot. Then, entire class session needed for a complex beeswarm plot.

* Add another tidycensus tutorial or two, need to show at least some cool 
maps. Should do during week 2. R4DS tutorials can wait.

* Add a tidytext tutorial, if only to set the groundwork for a class exercise 
in week 3.

* Standardize (either in a tutorial or as a spreadsheet) students submitting 
their data project ideas (and a URL) before class #7.

* Consider just having two classes a week.

* Could the Google form for submissions be simpler.


## Key Ideas

* Make stuff. Each week (and many individual classes) ends with the 
construction of something cool.

* Present stuff. Have a public presentation every four weeks.

* Professional tools.

* Use AI.

* Keep careful track of students in the course. There is one spreadsheet in 
which the head TF keeps track of students in the class.

## Zoom Issues

The business license allows for 300 users, which is mostly enough. The large meeting licence would give us 500, or more.

When using breakout rooms, just pick the option that allows people to move 
wherever they want. No need to pre-assign or grant co-host status, I think.

## Running the Class

* Class is organized by week. What do we want to accomplish by the end of the 
week? The goal will always be a completed project, published to Github Pages.

* We have a target goal for each day, but we also have "extra" work/questions 
which we can use to challenge students who are going too fast. We never want 
students on Monday to start doing the work for Wednesday's class. All students 
start Wednesday's class from the same starting line.

* Good extra/work questions are written ahead of time and, perhaps, included in 
the Preceptor Notes.


## Schedule

### Week 1: Github/Rpubs using library data

We are only using data from a package: connectedness data from primer.data.  
Use R projects and Github repos. Finish with a nice plot, available on Rpubs. 
Students going faster can make more plots, especially a scatterplot, 
even one with facets by state, but just for a few bigger, more interesting 
states.

### Week 2: Github/Rpubs using downloaded data

Students must download and save their own copy of some Census data, 
which we give them via link to Github. First day is the Terminal and messing 
with the data. Second day, create a simple plot. Third day is beeswarm plot, 
perhaps with data from a different geographic area.

Really ought to show a map, either this week or next week.

### Week 3: Github/Quarto Website using different data sources

Download data as part of a larger project. This is mimicing the process by 
which students create their data projects for next week. Create a Quarto 
website which will look alot like the data projects. If we use Census, we 
could encourage to pick different data items. We do this three times, even 
though finishing a whole website is tricky. Use a different data source each 
day, the better to introduce students to good data sources for their projects: 
one day (and maybe two days) is Census. One day might be text, if we have 
assigned them at least one tutorial from tidytext book.

Include several different scripts and saved images.

### Week 4: Data Projects

Need to think more about the best way to spend M/W of this week. Certainly 
want to have, for Monday, a rough draft of room assignments. Spend money 
looking at projects within the breakout rooms, especially since students 
don't see their breakout room peers' projects on Demo Day.

### Week 5: First Model

First four chapters of Primer. This gets the basics down and also gives us 
the easiest brms model in the models chapter. Focus on the Cardinal Virtues. 
Understand the whole process. Learn all the key terms. Finish with an RPubs 
that does and shows an entire model. Maybe use recent survey data? Could 
always use presidential approval.

### Week 6

Each of weeks 6 and 7 we complete the entire modeling process. Starting with 
some data and a question. Finishing with an graphic which shows the answer to 
the question. Entire thing becomes a Quarto website by the end of the week. 
The more we show students what a good Model Project looks like, the better 
theirs will be. 

### Week 7


### Week 8: Model Projects

Focus is the model project presentations on Thursday.




