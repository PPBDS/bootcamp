---
title: "Day 9"
execute: 
  echo: false
  message: false
  warning: false
---

Let's explore some weather data. I really like this NYT [article](https://www.nytimes.com/interactive/2021/06/29/upshot/portland-seattle-vancouver-weather.html) and the associated plot:

```{r}
knitr::include_graphics("data/seattle-temps.png")
```

Which we will replicate (and update) like so:

```{r}
library(tidyverse)
library(worldmet)
```


```{r}
#| message: false
#| cache: true

x <- importNOAA(code = "727935-24234", 
                          year = 1979:2025,
                          hourly = FALSE) 
```


```{r}
daily_max <- x %>%
  mutate(
    date_only = as.Date(date),
    temp_f = air_temp * 9/5 + 32,  # Convert Celsius to Fahrenheit
    year = year(date),
    month = month(date),
    day = day(date)
  ) %>%
  # Filter out NA temperatures before grouping
  filter(!is.na(temp_f)) %>%
  group_by(date_only, year, month, day) %>%
  summarise(
    tmax_f = max(temp_f),  # No need for na.rm since we filtered NAs
    n_obs = n(),  # Count of observations per day
    .groups = 'drop'
  ) %>%
  mutate(
    day_of_year = yday(date_only)
  )
```

```{r}
ggplot(daily_max, aes(x = day_of_year, y = tmax_f)) +
 geom_point(alpha = 0.3, size = 0.5, color = "gray60") +
 scale_x_continuous(
   breaks = c(1, 32, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335),
   labels = c("Jan.", "Feb.", "March", "April", "May", "June",
              "July", "Aug.", "Sept.", "Oct.", "Nov.", "Dec.")
 ) +
 scale_y_continuous(
   limits = c(20, 120),
   breaks = seq(20, 120, by = 20)
 ) +
 labs(
   title = "Daily maximum temperatures in Seattle, 1979-2025",
   x = "",
   y = "deg. Fahrenheit"
 ) +
 theme_minimal() +
 theme(
   panel.grid.minor = element_blank(),
   axis.text = element_text(size = 10)
 )
```

## Questions Which I Asked AI

````
I am using R. How can I gather the data to make a plot like this?
````

````
How about worldmet package since rnoaa seems deprecated?
````

````
Here is the data:

x

Obviously, I need to calculate a high for each day. I also need a new day-of-the-year variable to make the plotting easier.
````

````
daily_max
..

Plot for graphic. Just do a basic version first, using ggplot()
````

## Session 1

Start up a data science project! That means, a new Github repo, connected to a new project on your computer.
Since we are making a website, we also do `quarto create project website .`

Note that that command gives us the `.gitginore`. Without it, we would need to create by hand.

At some point, we need to add `_site` to the `.gitignore`.

Not too early to make

## Session 2

Cold call: Tell me about your peer's project? Or your project!

In the project, create a Quarto website. From the Terminal:

quarto create project website .

Remind yourself, from the tutorial, what the files mean/do. Preview the website:

quarto preview

Make sure this works for everyone in your group. Extra time? Student 2 gives a tour of her data.

Start editing the index.qmd.

## Session 3

Cold call: Tell me about another project in your group.

Edit the index.qmd to load some libraries and read in the data. Looks at the data! Poke around! Start thinking about a plot.

## Session 4

Cold call: How did your group do?

Ask ChatGPT:

```
I have a tibble x, which looks like this:

x

How can I make a nice graphic?
```

Use whatever text you like. If the plot doesn't look good. Tell AI what to change.

Once the plot starts looking good, consider organizing things a bit better, as we did in the Quarto Websites tutorial. Perhaps clean_data.R script. Perhaps a make_graphic.R script. Maybe index.qmd only loads an image.

Clean up about.qmd.


## Session 5

Publish your website with:

quarto publish quarto-pub

Make sure this works for everyone in your room.

## Session 6

Clean up your website.

0) Put your download data in a script and just do it once.

1) Make your plot nicer. There is obviously a lot that one might do.

2) Clean up the about.qmd, the title, and so on.

