---
title: "Day 7"
execute: 
  echo: false
---

Might not use this version again, but, for this session.

## Preparation

```{r}
#| message: false

library(tidyverse)
library(babynames)

babynames |> 
  filter(str_detect(name, "i$")) |> 
  write_csv(file = "data/i_names.csv")

```

Consider copy/pasting a copy of the graphic to the #course-work channel.


## Session 1

Time to do some more data science. As always when starting a new project, we create a Github repo and connect it to an R project on our computer. Add *Rproj to the .gitignore. Commit and push. 

Talk about your final projects. Do you have data? Add a comment to the #final-projects Discord channel with your initial idea and, perhaps, some data links. Do that at some point during class today.

## Sesssion 2

Add a data directory to your project. Download the data from Discord. Put the download in the data directory. It is OK if students do this with point-and-click rather than with Terminal commands. The important point is to give them practice. If you have more time, you can start up a quarto document and try to download the data.

## Sesssion 3

Create a quarto document with a set up code chunk to load Tidyverse and a clean up code chunk to load the data to x. Explore the data. Run x, glimpse(x), summary(x), x |> slice_sample(n = 5).

Figure out what n and prop mean. You would know if you did the tutorials!

Note how message tells you about the magic of show_col_types = FALSE.

```{r}
#| echo: false
#| message: false

library(tidyverse)
```

```{r}
x <- read_csv(file = "data/i_names.csv", show_col_types = FALSE)
```

## Sesssion 4

Start the interactive plotting process. I don't think that they have seen geom_area() before. Don't tell them this. Have them ask chatGpt or a similar too.

https://chat.openai.com/share/5e7ad2f5-3c18-4699-9a1a-7776b8a34daf

This might be too much to do in this session. Maybe we just try to get the summary() stuff correct. But, we certainly stop as this point.

Talk about all the things that are wrong with this plot and that we should fix, other than the obvious need for titles and axis labels.

```{r}
x |> 
  summarise(perc = sum(prop), .by = c(year, sex)) |> 
  ggplot(aes(x = year, y = perc, fill = sex)) +
    geom_area()
```


## Sesssion 5

Make the plot look nice

```{r}
x |> 
  summarise(perc = sum(prop), .by = c(year, sex)) |> 
  ggplot(aes(x = year, y = perc, fill = sex)) +
    geom_area() +
    scale_y_continuous(labels = scales::percent_format()) +
    labs(title = 'Percentage of US Babies with Names Ending in "i"',
         subtitle = "Boy names end with i are steadily increasing",
         x = "Year",
         y = "Percent",
         caption = "Babynames R Package",
         fill = "Sex") 
  
```







