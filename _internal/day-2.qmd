---
title: "Day 2"
author: "David Kane"
---

## Session 1

Start by making an R project. Note how it, by default, is placed in my projects folder. Note that all this only makes sense if you have done the RStudio and Code tutorial. If you haven't done this, you are hurting your classmates. Catch up by tomorrow or don't come back.

Look in the files directory. Talk about the two things that are there. Show the hidden files button. Mention that this was set by prep_rstudio_settings().

With an empty project, create a Quarto document. Accept the default with all the junk. Render it. (Give it a name.) Look at the result. Click Visual and Source buttons. Look in the files directory again. There is some new stuff there.

Delete all the junk in the document. Render again. Send everyone to breakout rooms to do the same.

## Session 2

Bring them back. Now add some basic information to the new empty document. Add a code chunk with 2 + 2. Render it. Talk about how you see the code and the output. This is the magic of Quarto: you can mix text and code together. 


```{r}
2 + 2
```

Show how we can also execute this line directly, first by hitting the run button, and second with command-enter. Introduce the two "worlds" of data science: the document and the console. They are not the same thing!

Change 2 + 2 to x <- 2 + 2. Render. Nothing shows up in the document! You only see what you have done if you "dump" it out in the document. No "output" if you typed it into the console means no "output" if you do it in a document.

Show how x shows up in the environment. Restart R. x is gone!

Send them to the rooms. Practice everything that I have just showed you!

## Session 3

Bring people back. 

There are three shortcut keys we are learning today: option-control-i (for creating code chunks), command-enter (for working with code), and command-shift-k (for rendering).

Add an in-line calculation of the same addition. Add a code chunk which loads the tidyverse. Render again.

The sum of two and two is: `r 2 + 2`.

```{r}
library(tidyverse)
```

Note all the garbage which this is producing! The document is ugly. There are two problems: we don't want to see the code and we don't want to see junky output. Wonder how we might get rid of these? In the meantime, just do what I have done here.

Send them to the breakout rooms to replicate these.

## Session 4

Bring them back. Delete the 2 + 2 block and the inline. Explain that we want to not echo the code and also not see the output when loading the tidyverse. Discuss code chunk options and the hash-pipe. Provide them with the code to load up the data.

Add a code chunk which runs a summary.

Render document. It works! But then summary(x) does not work in the console. Whoa! Review the distinction between what happens in the document and what happens in the environment. Execute the data loading code. Now summary(x) works! Restart R. Note how x disappears from the environment. Rendering the document still works! But summary(x) does not.

You can never restart R (not RStudio) too often.

Before sending them back to the rooms, encourage groups to both explore the data and to make some plots. 


```{r}
#| output: false
#| echo: false
library(tidyverse)
library(primer.data)
```

```{r}
summary(connectedness)
```


## Session 5

Everyone has some data and can look at it. Do we have time for much more? Maybe send them back to answer some other questions. What is the 3rd largest (by population) county in the US? Which county has the best economic connectedness?

```{r}
connectedness |> 
  arrange(desc(population))
```

```{r}
connectedness |> 
  arrange(location)
```

Any guesses as to the makeup of those counties?

## Session 6

Publish our plots. Point out the rsconnect file. Copy the link to the class-work Discord channel.




